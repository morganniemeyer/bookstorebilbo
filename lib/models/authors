const pool = require('../utils/pool');
const { Book } = require('./books');

class Author {
  id;
  name;
  dob;
  pob;

  constructor(row) {
    this.id = row.id;
    this.name = row.name;
    this.dob = row.dob;
    this.pob = row.pob;
  }

  static async getAll() {
    const { rows } = await pool.query('SELECT * from authors');
    return rows.map((authorRow) => new Author(authorRow));
  }
}

class AuthorWBook {
  id;
  name;
  dob;
  pob;
  books;

  constructor(row) {
    this.id = row.id;
    this.name = row.name;
    this.dob = row.dob;
    this.pob = row.pob;
    this.books =
      row.books.length > 0 ? row.books.map((book) => new Book(book)) : [];
  }

  static async getById(id) {
    const { rows } = await pool.query(
      `
      select authors.*,
      coalesce(
          json_agg(to_jsonb(books))
          filter(WHERE books.id IS NOT NULL), '[]') as books
          from authors left join correlation
              on authors.id = correlation.author_id
          left join books
              on books.id = correlation.book_id
          where authors.id = $1
          group by authors.id;
    `,
      [id]
    );
    const newAuthorWBook = new AuthorWBook(rows[0]);
    return newAuthorWBook;
  }
}

module.exports = { Author, AuthorWBook };
